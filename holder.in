<
 <= 
const m = 7, n = 85;
int i,x,y,z,q,r;
procedure mult;
	int a,b;
	begin
		a := x; b := y; z := 0;
		while b >= 0 do
		begin
			if odd x then z := z + a;
				a := 2*a;
				b := b/2;
		end
	end;

begin
	x := m;
	y := n;
	call mult;
end.
<>, <=, >=, =


Lexeme Table:
lexeme		token type
potato			2
pot4t0			2
29			3
12742			3
+			4
-			5
*			6
/			7
odd			2
=			9
<>			10
>			2
<			11
			2
<			11
=			2
>			13
>			13
=			9
(			15
)			16
,			17
;			18
.			19
:=			20
begin			21
end			22
if			23
then			24
while			25
do			26
call			27
const			28
int			29
procedure		30
out			2
in			2
read			32
write			31
else			33

Lexeme List:
2 potato 2 pot4t0 3 29 3 12742 4 5 6 7 2 odd 9 10 2 > 11 2 
 11 2 = 13 13 9 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 2 out 2 