Source Code:
const n = 13;
int i, h;
procedure sub;
	const k = 7;
	int j, h;
	begin
		j := n;
		i := 1;
		h := k;
	end;
begin
	i := 3;
	h := 0;
	call sub;
end.

Lexeme Table:
lexeme		token type
const			28
n			2
=			9
13			3
;			18
int			29
i			2
,			17
h			2
;			18
procedure		30
sub			2
;			18
const			28
k			2
=			9
7			3
;			18
int			29
j			2
,			17
h			2
;			18
begin			21
j			2
:=			20
n			2
;			18
i			2
:=			20
1			3
;			18
h			2
:=			20
k			2
;			18
end			22
;			18
begin			21
i			2
:=			20
3			3
;			18
h			2
:=			20
0			3
;			18
call			27
sub			2
;			18
end			22
.			19

Lexeme List:
 28 2 n 9 3 13 18 29 2 i 17 2 h 18 30 2 sub 18 28 2 k 9 3 7 18 29 2 j 17 2 h 18 21 2 j 20 2 n 18 2 i 20 3 1 18 2 h 20 2 k 18 22 18 21 2 i 20 3 3 18 2 h 20 3 0 18 27 2 sub 18 22 19

The symbolic representation of the Lexeme List:
constsym identsym n eqsym numbersym 13 semicolonsym intsym identsym i commasym identsym h semicolonsym procsym identsym sub semicolonsym constsym identsym k eqsym numbersym 7 semicolonsym intsym identsym j commasym identsym h semicolonsym beginsym identsym j becomessym identsym n semicolonsym identsym i becomessym numbersym 1 semicolonsym identsym h becomessym identsym k semicolonsym endsym semicolonsym beginsym identsym i becomessym numbersym 3 semicolonsym identsym h becomessym numbersym 0 semicolonsym callsym identsym sub semicolonsym endsym periodsym 